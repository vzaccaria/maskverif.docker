
(*Scheme for t=2/s=3, with 2*2^s*)

proc iet_and_2:

	inputs: a[0:2], b[0:2]
	outputs: c[0:2]
	randoms: r[0:17];

	(*randoms*)
	
	r_00_01 := r[0] + r[1]; 
	r_01_02 := r[1] + r[2];
	r_02_00 := r[2] + r[0];
	
	r_10_11 := r[3] + r[4]; 
	r_11_12 := r[4] + r[5];
	r_12_10 := r[5] + r[3];

	r_20_21 := r[6] + r[7]; 
	r_21_22 := r[7] + r[8];
	r_22_20 := r[8] + r[6];

	q_00_10 := r[9] + r[12];
	q_01_11 := r[10] + r[13];
	q_02_12 := r[11] + r[14];
	
	q_10_20 := r[12] + r[15];
	q_11_21 := r[13] + r[16];
	q_12_22 := r[14] + r[17];
	
	q_20_00 := r[15] + r[9];
	q_21_01 := r[16] + r[10];
	q_22_02 := r[17] + r[11];

	reg_r0 = ![r_00_01 + q_00_10];
	reg_r1 = ![r_01_02 + q_01_11];
	reg_r2 = ![r_02_00 + q_02_12];
	
	reg_r3 = ![r_10_11 + q_10_20];
	reg_r4 = ![r_11_12 + q_11_21];
	reg_r5 = ![r_12_10 + q_12_22];
	
	reg_r6 = ![r_20_21 + q_20_00];
	reg_r7 = ![r_21_22 + q_21_01];
	reg_r8 = ![r_22_20 + q_22_02];

	(*first cone, no-linear layer*)
	a0b0 := a[0] * b[0];
	a0b0 = ![a0b0 + reg_r0];
	a0b1 := a[0] * b[1];
	a0b1 = ![a0b1 + reg_r1];
	a0b2 := a[0] * b[2];
	a0b2 = ![a0b2 + reg_r2];

	(*second cone, no-linear layer*)
	a1b0 := a[1] * b[0];
	a1b0 = ![a1b0 + reg_r3];
	a1b1 := a[1] * b[1];
	a1b1 = ![a1b1 + reg_r4];
	a1b2 := a[1] * b[2];
	a1b2 = ![a1b2 + reg_r5];

	(*third cone, no-linear layer*)
	a2b0 := a[2] * b[0];
	a2b0 = ![a2b0 + reg_r6];
	a2b1 := a[2] * b[1];
	a2b1 = ![a2b1 + reg_r7];
	a2b2 := a[2] * b[2];
	a2b2 = ![a2b2 + reg_r8];

	(*first cone, compression*)
	c[0] := a0b0 + a0b1;
	c[0] := c[0] + a0b2;

	(*second cone, compression*)
	c[1] := a1b0 + a1b1;
	c[1] := c[1] + a1b2;

	(*third cone, compression*)
	c[2] := a2b0 + a2b1;
	c[2] := c[2] + a2b2;

end

verbose 1
SNI iet_and_2
