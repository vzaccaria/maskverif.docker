
(*Scheme for t=5/s=6, with 2*2^s*)

proc iet_and_5:

	inputs: a[0:5], b[0:5]
	outputs: c[0:5]
	randoms: r[0:71];

	(*randoms*)
	
	r_00 := r[0] + r[1]; 
	r_01 := r[1] + r[2];
	r_02 := r[2] + r[3];
	r_03 := r[3] + r[4];
	r_04 := r[4] + r[5];
	r_05 := r[5] + r[0];
	
	r_10 := r[6] + r[7]; 
	r_11 := r[7] + r[8];
	r_12 := r[8] + r[9];
	r_13 := r[9] + r[10];
	r_14 := r[10] + r[11];
	r_15 := r[11] + r[6];
	
	r_20 := r[12] + r[13]; 
	r_21 := r[13] + r[14];
	r_22 := r[14] + r[15];
	r_23 := r[15] + r[16];
	r_24 := r[16] + r[17];
	r_25 := r[17] + r[12];
	
	r_30 := r[18] + r[19]; 
	r_31 := r[19] + r[20];
	r_32 := r[20] + r[21];
	r_33 := r[21] + r[22];
	r_34 := r[22] + r[23];
	r_35 := r[23] + r[18];
	
	r_40 := r[24] + r[25]; 
	r_41 := r[25] + r[26];
	r_42 := r[26] + r[27];
	r_43 := r[27] + r[28];
	r_44 := r[28] + r[29];
	r_45 := r[29] + r[24];
	
	r_50 := r[30] + r[31]; 
	r_51 := r[31] + r[32];
	r_52 := r[32] + r[33];
	r_53 := r[33] + r[34];
	r_54 := r[34] + r[35];
	r_55 := r[35] + r[30];
	
	q_00 := r[36] + r[42];
	q_01 := r[37] + r[43];
	q_02 := r[38] + r[44];
	q_03 := r[39] + r[45];
	q_04 := r[40] + r[46];
	q_05 := r[41] + r[47];
	
	q_10 := r[42] + r[48];
	q_11 := r[43] + r[49];
	q_12 := r[44] + r[50];
	q_13 := r[45] + r[51];
	q_14 := r[46] + r[52];
	q_15 := r[47] + r[53];
	
	q_20 := r[48] + r[54];
	q_21 := r[49] + r[55];
	q_22 := r[50] + r[56];
	q_23 := r[51] + r[57];
	q_24 := r[52] + r[58];
	q_25 := r[53] + r[59];
	
	q_30 := r[54] + r[60];
	q_31 := r[55] + r[61];
	q_32 := r[56] + r[62];
	q_33 := r[57] + r[63];
	q_34 := r[58] + r[64];
	q_35 := r[59] + r[65];
	
	q_40 := r[60] + r[66];
	q_41 := r[61] + r[67];
	q_42 := r[62] + r[68];
	q_43 := r[63] + r[69];
	q_44 := r[64] + r[70];
	q_45 := r[65] + r[71];
	
	q_50 := r[66] + r[36];
	q_51 := r[67] + r[37];
	q_52 := r[68] + r[38];
	q_53 := r[69] + r[39];
	q_54 := r[70] + r[40];
	q_55 := r[71] + r[41];
	
	reg_r0 = ![r_00 + q_00];
	reg_r1 = ![r_01 + q_01];
	reg_r2 = ![r_02 + q_02];
	reg_r3 = ![r_03 + q_03];
	reg_r4 = ![r_04 + q_04];
	reg_r5 = ![r_05 + q_05];
	
	reg_r6 = ![r_10 + q_10];
	reg_r7 = ![r_11 + q_11];
	reg_r8 = ![r_12 + q_12];
	reg_r9 = ![r_13 + q_13];
	reg_r10 = ![r_14 + q_14];
	reg_r11 = ![r_15 + q_15];
	
	reg_r12 = ![r_20 + q_20];
	reg_r13 = ![r_21 + q_21];
	reg_r14 = ![r_22 + q_22];
	reg_r15 = ![r_23 + q_23];
	reg_r16 = ![r_24 + q_24];
	reg_r17 = ![r_25 + q_25];
	
	reg_r18 = ![r_30 + q_30];
	reg_r19 = ![r_31 + q_31];
	reg_r20 = ![r_32 + q_32];
	reg_r21 = ![r_33 + q_33];
	reg_r22 = ![r_34 + q_34];
	reg_r23 = ![r_35 + q_35];
	
	reg_r24 = ![r_40 + q_40];
	reg_r25 = ![r_41 + q_41];
	reg_r26 = ![r_42 + q_42];
	reg_r27 = ![r_43 + q_43];
	reg_r28 = ![r_44 + q_44];
	reg_r29 = ![r_45 + q_45];
	
	reg_r30 = ![r_50 + q_50];
	reg_r31 = ![r_51 + q_51];
	reg_r32 = ![r_52 + q_52];
	reg_r33 = ![r_53 + q_53];
	reg_r34 = ![r_54 + q_54];
	reg_r35 = ![r_55 + q_55];

	(*first cone, no-linear layer*)
	a0b0 := a[0] * b[0];
	a0b0 = ![a0b0 + reg_r0];
	a0b1 := a[0] * b[1];
	a0b1 = ![a0b1 + reg_r1];
	a0b2 := a[0] * b[2];
	a0b2 = ![a0b2 + reg_r2];
	a0b3 := a[0] * b[3];
	a0b3 = ![a0b3 + reg_r3];
	a0b4 := a[0] * b[4];
	a0b4 = ![a0b4 + reg_r4];
	a0b5 := a[0] * b[5];
	a0b5 = ![a0b5 + reg_r5];

	(*second cone, no-linear layer*)
	a1b0 := a[1] * b[0];
	a1b0 = ![a1b0 + reg_r6];
	a1b1 := a[1] * b[1];
	a1b1 = ![a1b1 + reg_r7];
	a1b2 := a[1] * b[2];
	a1b2 = ![a1b2 + reg_r8];
	a1b3 := a[1] * b[3];
	a1b3 = ![a1b3 + reg_r9];
	a1b4 := a[1] * b[4];
	a1b4 = ![a1b4 + reg_r10];
	a1b5 := a[1] * b[5];
	a1b5 = ![a1b5 + reg_r11];

	(*third cone, no-linear layer*)
	a2b0 := a[2] * b[0];
	a2b0 = ![a2b0 + reg_r12];
	a2b1 := a[2] * b[1];
	a2b1 = ![a2b1 + reg_r13];
	a2b2 := a[2] * b[2];
	a2b2 = ![a2b2 + reg_r14];
	a2b3 := a[2] * b[3];
	a2b3 = ![a2b3 + reg_r15];
	a2b4 := a[2] * b[4];
	a2b4 = ![a2b4 + reg_r16];
	a2b5 := a[2] * b[5];
	a2b5 = ![a2b5 + reg_r17];

	(*fourth cone, no-linear layer*)
	a3b0 := a[3] * b[0];
	a3b0 = ![a3b0 + reg_r18];
	a3b1 := a[3] * b[1];
	a3b1 = ![a3b1 + reg_r19];
	a3b2 := a[3] * b[2];
	a3b2 = ![a3b2 + reg_r20];
	a3b3 := a[3] * b[3];
	a3b3 = ![a3b3 + reg_r21];
	a3b4 := a[3] * b[4];
	a3b4 = ![a3b4 + reg_r22];
	a3b5 := a[3] * b[5];
	a3b5 = ![a3b5 + reg_r23];

	(*fifth cone, no-linear layer*)
	a4b0 := a[4] * b[0];
	a4b0 = ![a4b0 + reg_r24];
	a4b1 := a[4] * b[1];
	a4b1 = ![a4b1 + reg_r25];
	a4b2 := a[4] * b[2];
	a4b2 = ![a4b2 + reg_r26];
	a4b3 := a[4] * b[3];
	a4b3 = ![a4b3 + reg_r27];
	a4b4 := a[4] * b[4];
	a4b4 = ![a4b4 + reg_r28];
	a4b5 := a[4] * b[5];
	a4b5 = ![a4b5 + reg_r29];

	(*sixth cone, no-linear layer*)
	a5b0 := a[5] * b[0];
	a5b0 = ![a5b0 + reg_r30];
	a5b1 := a[5] * b[1];
	a5b1 = ![a5b1 + reg_r31];
	a5b2 := a[5] * b[2];
	a5b2 = ![a5b2 + reg_r32];
	a5b3 := a[5] * b[3];
	a5b3 = ![a5b3 + reg_r33];
	a5b4 := a[5] * b[4];
	a5b4 = ![a5b4 + reg_r34];
	a5b5 := a[5] * b[5];
	a5b5 = ![a5b5 + reg_r35];

	(*first cone, compression*)
	c[0] := a0b0 + a0b1;
	c[0] := c[0] + a0b2;
	c[0] := c[0] + a0b3;
	c[0] := c[0] + a0b4;
	c[0] := c[0] + a0b5;

	(*second cone, compression*)
	c[1] := a1b0 + a1b1;
	c[1] := c[1] + a1b2;
	c[1] := c[1] + a1b3;
	c[1] := c[1] + a1b4;
	c[1] := c[1] + a1b5;

	(*third cone, compression*)
	c[2] := a2b0 + a2b1;
	c[2] := c[2] + a2b2;
	c[2] := c[2] + a2b3;
	c[2] := c[2] + a2b4;
	c[2] := c[2] + a2b5;

	(*fourth cone, compression*)
	c[3] := a3b0 + a3b1;
	c[3] := c[3] + a3b2;
	c[3] := c[3] + a3b3;
	c[3] := c[3] + a3b4;
	c[3] := c[3] + a3b5;

	(*fifth cone, compression*)
	c[4] := a4b0 + a4b1;
	c[4] := c[4] + a4b2;
	c[4] := c[4] + a4b3;
	c[4] := c[4] + a4b4;
	c[4] := c[4] + a4b5;

	(*sixth cone, compression*)
	c[5] := a5b0 + a5b1;
	c[5] := c[5] + a5b2;
	c[5] := c[5] + a5b3;
	c[5] := c[5] + a5b4;
	c[5] := c[5] + a5b5;

end

verbose 1
SNI iet_and_5
